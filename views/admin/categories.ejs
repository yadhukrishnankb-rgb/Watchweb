<%- include('../partials/admin/header') %>



<div class="flex-1 p-8">
    <div class="mb-6 flex justify-between items-center">
        <h1 class="text-2xl font-bold text-gray-800">Category Management</h1>
        <button onclick="openAddModal()" class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">
            Add Category
        </button>
    </div>

    <!-- Search Bar -->
    <div class="mb-6">
        <form action="/admin/categories" method="GET" class="flex gap-2">
            <input type="text" 
                   name="search" 
                   value="<%= searchQuery %>" 
                   placeholder="Search categories..." 
                   class="flex-1 px-4 py-2 border rounded-lg">
            <button type="submit" class="px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">
                Search
            </button>
            <% if (searchQuery) { %>
                <a href="/admin/categories" class="px-6 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600">
                    Clear
                </a>
            <% } %>
        </form>
    </div>

    <!-- Categories Table -->
    <div class="bg-white rounded-lg shadow overflow-hidden">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
                <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Name</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Description</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Created At</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Actions</th>
                </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
                <% if (categories && categories.length > 0) { %>
                    <% categories.forEach(category => { %>
                        <tr data-category-id="<%= category._id %>">
                            <td class="px-6 py-4 whitespace-nowrap"><%= category.name %></td>
                            <td class="px-6 py-4"><%= category.description %></td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <%= new Date(category.createdAt).toLocaleDateString() %>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <button onclick="openEditModal('<%= category._id %>', '<%= category.name %>', '<%= category.description %>')" 
                                        class="text-blue-600 hover:text-blue-900 mr-3">
                                    Edit
                                </button>
                                <button onclick="confirmDelete('<%= category._id %>')" 
                                        class="text-red-600 hover:text-red-900">
                                    Delete
                                </button>
                            </td>
                        </tr>

                    <% }); %>
                <% } else { %>
                    <tr>
                        <td colspan="4" class="px-6 py-4 text-center text-gray-500">
                            No categories found
                        </td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <% if (totalPages > 1) { %>
        <div class="mt-6 flex justify-center">
            <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px">
                <% for(let i = 1; i <= totalPages; i++) { %>
                    <a href="/admin/categories?page=<%= i %><%= searchQuery ? '&search=' + searchQuery : '' %>" 
                       class="relative inline-flex items-center px-4 py-2 border text-sm font-medium 
                              <%= currentPage === i ? 'z-10 bg-blue-50 border-blue-500 text-blue-600' : 'bg-white border-gray-300 text-gray-500 hover:bg-gray-50' %>">
                        <%= i %>
                    </a>
                <% } %>
            </nav>
        </div>
    <% } %>
</div>

<!-- Add Category Modal -->
<div id="addModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg leading-6 font-medium text-gray-900">Add New Category</h3>
            <form id="addCategoryForm" class="mt-4">
                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Name</label>
                    <input type="text" name="name" required
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Description</label>
                    <textarea name="description" required
                              class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"></textarea>
                </div>
                <div class="flex justify-end">
                    <button type="button" onclick="closeAddModal()" 
                            class="mr-2 px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">
                        Add
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Category Modal -->
<div id="editModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden overflow-y-auto h-full w-full">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3">
            <h3 class="text-lg leading-6 font-medium text-gray-900">Edit Category</h3>
            <form id="editCategoryForm" class="mt-4">
                <input type="hidden" id="editCategoryId">
                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Name</label>
                    <input type="text" id="editName" name="name" required
                           class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
                </div>
                <div class="mb-4">
                    <label class="block text-gray-700 text-sm font-bold mb-2">Description</label>
                    <textarea id="editDescription" name="description" required
                              class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"></textarea>
                </div>
                <div class="flex justify-end">
                    <button type="button" onclick="closeEditModal()" 
                            class="mr-2 px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600">
                        Update
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
// Modal Functions
function openAddModal() {
    document.getElementById('addModal').classList.remove('hidden');
}

function closeAddModal() {
    document.getElementById('addModal').classList.add('hidden');
    document.getElementById('addCategoryForm').reset();
}

function openEditModal(id, name, description) {
    document.getElementById('editModal').classList.remove('hidden');
    document.getElementById('editCategoryId').value = id;
    document.getElementById('editName').value = name;
    document.getElementById('editDescription').value = description;
}

function closeEditModal() {
    document.getElementById('editModal').classList.add('hidden');
    document.getElementById('editCategoryForm').reset();
}

// Form Submissions
document.getElementById('addCategoryForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    
    try {
        const response = await fetch('/admin/categories', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                name: formData.get('name'),
                description: formData.get('description')
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            closeAddModal();
            window.location.reload();
        } else {
            alert(data.message);
        }
    } catch (error) {
        alert('Error adding category');
    }
});

document.getElementById('editCategoryForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    const id = document.getElementById('editCategoryId').value;
    const formData = new FormData(e.target);
    
    try {
        const response = await fetch(`/admin/categories/${id}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                name: formData.get('name'),
                description: formData.get('description')
            })
        });
        
        const data = await response.json();
        
        if (data.success) {
            closeEditModal();
            window.location.reload();
        } else {
            alert(data.message);
        }
    } catch (error) {
        alert('Error updating category');
    }
});

function confirmDelete(id) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            deleteCategory(id);
        }
    });
}



async function deleteCategory(id) {
    try {
        const response = await fetch(`/admin/categories/${id}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        const data = await response.json();
        
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Deleted!',
                text: 'Category has been deleted.',
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                // Remove the deleted row from the table without page reload
                const row = document.querySelector(`tr[data-category-id="${id}"]`);
                if (row) {
                    row.remove();
                }
                // If no categories left, show "No categories found" message
                const tbody = document.querySelector('tbody');
                if (!tbody.hasChildNodes()) {
                    tbody.innerHTML = `
                        <tr>
                            <td colspan="4" class="px-6 py-4 text-center text-gray-500">
                                No categories found
                            </td>
                        </tr>
                    `;
                }
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: data.message || 'Something went wrong!'
            });
        }
    } catch (error) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: 'Error deleting category!'
        });
    }
}

</script>




<%- include('../partials/admin/footer') %>